<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>思维折痕</title>
    <link>https://przutto.github.io/</link>
    <description>When technology, life, AI, and experiences intertwine, what kind of spark is created? Here, I&#39;ll share my personal projects, document my reflections and journeys, and explore this world of endless possibilities with you.</description>
    <generator>Hugo 0.148.2 &amp; FixIt v0.4.0-alpha-20250805041424-57ccd470</generator>
    <language>zh-CN</language>
    <managingEditor>przutto520@gmail.com (pr_zutto)</managingEditor>
    <webMaster>przutto520@gmail.com (pr_zutto)</webMaster>
    <lastBuildDate>Sat, 23 Aug 2025 19:45:16 +0800</lastBuildDate>
    <atom:link href="https://przutto.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BIOS优化</title>
      <link>https://przutto.github.io/ai-server/a1df1f9/</link>
      <pubDate>Sat, 23 Aug 2025 19:45:16 +0800</pubDate><author>przutto520@gmail.com (pr_zutto)</author>
      <guid>https://przutto.github.io/ai-server/a1df1f9/</guid>
      <category domain="https://przutto.github.io/categories/ai-%E5%B7%A5%E4%BD%9C%E7%AB%99-%E5%AE%8C%E5%85%A8%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/">AI-工作站 完全配置指南</category>
      <description>&lt;p&gt;这是本系列的BIOS优化篇，参考了 AMD 官方文档，旨在帮助您优化基于 &lt;strong&gt;AMD EPYC™ 7002 系列处理器&lt;/strong&gt;的系统 BIOS 设置，以获得最佳的 AI 工作负载性能。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;参考文档：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.amd.com/content/dam/amd/en/documents/epyc-technical-docs/tuning-guides/amd-epyc-7002-tg-hpc-56827.pdf&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;High Performance Computing (HPC) Tuning Guide for AMD EPYC™ 7002 Series Processors&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.amd.com/content/dam/amd/en/documents/epyc-technical-docs/tuning-guides/58467_amd-epyc-9005-tg-bios-and-workload.pdf&#34;target=&#34;_blank&#34; rel=&#34;external nofollow noopener noreferrer&#34;&gt;AMD EPYC™ 9005 BIOS &amp;amp; WORKLOAD TUNING GUIDE&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;ai-工作负载的特点与优化目标&#34;&gt;&lt;span&gt;AI 工作负载的特点与优化目标&lt;/span&gt;&#xA;  &lt;a href=&#34;#ai-%e5%b7%a5%e4%bd%9c%e8%b4%9f%e8%bd%bd%e7%9a%84%e7%89%b9%e7%82%b9%e4%b8%8e%e4%bc%98%e5%8c%96%e7%9b%ae%e6%a0%87&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;AI 工作负载，特别是深度学习，对计算资源有极高的要求，主要体现在：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;高浮点计算：&lt;/strong&gt; 需要充分利用如 &lt;strong&gt;AVX2&lt;/strong&gt; 等专用指令，并尽可能保持核心频率在最高水平。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;高内存带宽和容量：&lt;/strong&gt; 大规模数据集的加载和处理对内存速度和 &lt;strong&gt;NUMA&lt;/strong&gt; 拓扑十分敏感。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;高效数据传输：&lt;/strong&gt; 快速的互连（例如 &lt;strong&gt;PCIe&lt;/strong&gt;）对于将计算任务卸载到 GPU 等加速器至关重要。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;考虑到这些特点，以下是需要重点关注的 BIOS 设置。&lt;/p&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;关键-bios-设置详解&#34;&gt;&lt;span&gt;关键 BIOS 设置详解&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%85%b3%e9%94%ae-bios-%e8%ae%be%e7%bd%ae%e8%af%a6%e8%a7%a3&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;h4 class=&#34;heading-element&#34; id=&#34;1-numa-配置nps---每插槽-numa-域&#34;&gt;&lt;span&gt;1. NUMA 配置（NPS - 每插槽 NUMA 域）&lt;/span&gt;&#xA;  &lt;a href=&#34;#1-numa-%e9%85%8d%e7%bd%aenps---%e6%af%8f%e6%8f%92%e6%a7%bd-numa-%e5%9f%9f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;目标：&lt;/strong&gt; 优化数据局部性和内存带宽。AI 工作负载对数据访问模式极为敏感。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;建议：&lt;/strong&gt; 对于大多数 AI 工作负载，推荐将 &lt;strong&gt;NPS&lt;/strong&gt; 设置为 &lt;strong&gt;2&lt;/strong&gt; 或 &lt;strong&gt;4&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;NPS=2&lt;/strong&gt;：每个处理器插槽创建两个 NUMA 域。这能有效利用内存带宽，是兼顾性能和通用性的优秀选择。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;NPS=4&lt;/strong&gt;：每个处理器插槽创建四个 NUMA 域。该设置适合高度并行，且每个 NUMA 节点的数据集较小的工作负载。通过将进程显式绑定到特定 NUMA 节点，可以实现极致的数据局部性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;如何检查：&lt;/strong&gt; 在 Linux 系统中，您可以使用 &lt;code&gt;numactl --hardware&lt;/code&gt; 或 &lt;code&gt;hwloc-ls&lt;/code&gt; 命令来验证更改后的 NUMA 拓扑。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;details admonition note open&#34;&gt;&#xA;  &lt;div class=&#34;details-summary admonition-title&#34;&gt;&lt;i class=&#34;icon fa-fw fa-solid fa-pencil-alt&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;注意&lt;i class=&#34;details-icon fa-solid fa-angle-right fa-fw&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt;&lt;/div&gt;&#xA;  &lt;div class=&#34;details-content&#34;&gt;&#xA;    &lt;div class=&#34;admonition-content&#34;&gt;实践下来发现：NPS=1，对于推理任务是更优的选择。&lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;2-核心性能和功耗设置&#34;&gt;&lt;span&gt;2. 核心性能和功耗设置&lt;/span&gt;&#xA;  &lt;a href=&#34;#2-%e6%a0%b8%e5%bf%83%e6%80%a7%e8%83%bd%e5%92%8c%e5%8a%9f%e8%80%97%e8%ae%be%e7%bd%ae&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;目标：&lt;/strong&gt; 确保 CPU 核心始终以最高频率稳定运行，并最小化延迟。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;性能模式：&lt;/strong&gt; 将 &lt;strong&gt;“Determinism Slider”&lt;/strong&gt; 或类似的性能模式选项设置为 &lt;strong&gt;“Performance”&lt;/strong&gt; 或 &lt;strong&gt;“Max Performance”&lt;/strong&gt;。这会优先考虑性能而非能效，让核心时钟保持在高位。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;C-states：&lt;/strong&gt; 将 &lt;strong&gt;“Global C-state Control”&lt;/strong&gt; 或 &lt;strong&gt;“C-States”&lt;/strong&gt; 设置为**“Disabled”**。C-states 是 CPU 的节电模式，虽然能节省能源，但在核心需要从低功耗状态唤醒时会引入延迟，从而影响 AI 训练的一致性。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;P-states：&lt;/strong&gt; 寻找 &lt;strong&gt;“P-states Control”&lt;/strong&gt;、&lt;strong&gt;“DF P-states”&lt;/strong&gt; 或 &lt;strong&gt;“APBDIS”&lt;/strong&gt; 等设置。&lt;strong&gt;禁用&lt;/strong&gt; P-states 或确保处理器锁定在其最高性能状态（P0）。这能防止 CPU 频率随负载动态调整，从而保证最高时钟速度。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;3-内存设置&#34;&gt;&lt;span&gt;3. 内存设置&lt;/span&gt;&#xA;  &lt;a href=&#34;#3-%e5%86%85%e5%ad%98%e8%ae%be%e7%bd%ae&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;目标：&lt;/strong&gt; 最大化内存带宽，同时降低延迟。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;内存速度：&lt;/strong&gt; 将内存配置为在主板和 DIMM 所支持的&lt;strong&gt;最优延迟&lt;/strong&gt;下运行，例如 &lt;strong&gt;DDR4-2933 MT/s&lt;/strong&gt;，并不推荐 3200 MT/s，因为7002系列的Infinity Fabric时钟为2933，使内存时钟与Infinity Fabric时钟保持同步对于低延迟是更优的选择。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;内存交错：&lt;/strong&gt; 确保内存交错配置能提供&lt;strong&gt;最佳带宽&lt;/strong&gt;。通常，为每个插槽填满所有 &lt;strong&gt;8 个内存通道&lt;/strong&gt;能获得最大带宽。具体设置请参考您系统的官方文档。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;4-pcie-和-iommu&#34;&gt;&lt;span&gt;4. PCIe 和 IOMMU&lt;/span&gt;&#xA;  &lt;a href=&#34;#4-pcie-%e5%92%8c-iommu&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;目标：&lt;/strong&gt; 确保 GPU 和其他加速器之间能实现最佳通信。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;PCIe 代数：&lt;/strong&gt; 将用于 GPU 的 PCIe 插槽设置为其&lt;strong&gt;支持的最高代数和链路宽度&lt;/strong&gt;（例如 &lt;strong&gt;PCIe Gen4 x16&lt;/strong&gt;）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Above 4G Decoding：&lt;/strong&gt; 务必&lt;strong&gt;启用&lt;/strong&gt;该选项。这对于拥有大量 GPU 显存的系统至关重要，能让系统正确识别和映射超过 4GB 的 I/O 内存。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;IOMMU：&lt;/strong&gt; 如果您使用虚拟化或需要设备直通的容器技术，请保持 &lt;strong&gt;IOMMU&lt;/strong&gt; &lt;strong&gt;启用&lt;/strong&gt;。对于裸机 AI 训练，禁用该选项可能会带来微不足道的性能提升，但为了系统稳定性和日后的灵活性，通常建议保持启用。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;推荐的基线-bios-设置&#34;&gt;&lt;span&gt;推荐的基线 BIOS 设置&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%8e%a8%e8%8d%90%e7%9a%84%e5%9f%ba%e7%ba%bf-bios-%e8%ae%be%e7%bd%ae&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;下表提供了一套经过验证的，适用于 AI 工作负载的 BIOS &lt;strong&gt;基线设置&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;acpi-settings&#34;&gt;&lt;span&gt;ACPI Settings&lt;/span&gt;&#xA;  &lt;a href=&#34;#acpi-settings&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/a1df1f9/images/ACPI%20Settings.png&#34; title=&#34;ACPI Settings&#34; data-thumbnail=&#34;/ai-server/a1df1f9/images/ACPI%20Settings.png&#34; data-sub-html=&#34;&lt;h2&gt;ACPI Settings&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/a1df1f9/images/ACPI%20Settings.png&#39; alt=&#34;ACPI Settings&#34; height=&#34;952&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;ACPI Settings&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;项目&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;设置值&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;High Precision Event Timer&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Disabled]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;NUMA Nodes Per Socket&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[NPS1]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;ACPI SRAT L3 Cache As NUMA Domain&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Enabled]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;north-bridge-configuration&#34;&gt;&lt;span&gt;North Bridge Configuration&lt;/span&gt;&#xA;  &lt;a href=&#34;#north-bridge-configuration&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/a1df1f9/images/North%20Bridge%20Configuration.png&#34; title=&#34;North Bridge Configuration&#34; data-thumbnail=&#34;/ai-server/a1df1f9/images/North%20Bridge%20Configuration.png&#34; data-sub-html=&#34;&lt;h2&gt;North Bridge Configuration&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/a1df1f9/images/North%20Bridge%20Configuration.png&#39; alt=&#34;North Bridge Configuration&#34; height=&#34;960&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;North Bridge Configuration&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;项目&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;设置值&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Determinism Control&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Manual]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Determinism Slider&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Performance]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;cTDP Control&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Manual]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;cTDP&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;220&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;IOMMU&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Enabled]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Package Power Limit Control&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Manual]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Package Power Limit&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;220&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;APBDIS&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[0]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DF Cstates&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Disabled]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;memory-configuration&#34;&gt;&lt;span&gt;Memory Configuration&lt;/span&gt;&#xA;  &lt;a href=&#34;#memory-configuration&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/a1df1f9/images/Memory%20Configuration.png&#34; title=&#34;Memory Configuration&#34; data-thumbnail=&#34;/ai-server/a1df1f9/images/Memory%20Configuration.png&#34; data-sub-html=&#34;&lt;h2&gt;Memory Configuration&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/a1df1f9/images/Memory%20Configuration.png&#39; alt=&#34;Memory Configuration&#34; height=&#34;963&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;Memory Configuration&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;项目&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;设置值&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Memory Clock&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[2933MHz]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;TSME&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Disabled]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;cpu-configuration&#34;&gt;&lt;span&gt;CPU Configuration&lt;/span&gt;&#xA;  &lt;a href=&#34;#cpu-configuration&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/a1df1f9/images/CPU%20Configuration.png&#34; title=&#34;CPU Configuration&#34; data-thumbnail=&#34;/ai-server/a1df1f9/images/CPU%20Configuration.png&#34; data-sub-html=&#34;&lt;h2&gt;CPU Configuration&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/a1df1f9/images/CPU%20Configuration.png&#39; alt=&#34;CPU Configuration&#34; height=&#34;961&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;CPU Configuration&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;项目&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;设置值&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Global C-state Control&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Disabled]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;pci-devices-common-settings&#34;&gt;&lt;span&gt;PCI Devices Common Settings&lt;/span&gt;&#xA;  &lt;a href=&#34;#pci-devices-common-settings&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/a1df1f9/images/PCI%20Devices%20Common%20Settings.png&#34; title=&#34;PCI Devices Common Settings&#34; data-thumbnail=&#34;/ai-server/a1df1f9/images/PCI%20Devices%20Common%20Settings.png&#34; data-sub-html=&#34;&lt;h2&gt;PCI Devices Common Settings&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/a1df1f9/images/PCI%20Devices%20Common%20Settings.png&#39; alt=&#34;PCI Devices Common Settings&#34; height=&#34;957&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;PCI Devices Common Settings&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;项目&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;设置值&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Above 4G Decoding&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Enabled]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;SR-IOV Support&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Enabled]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;VGA Priority&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;[Offboard]&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;通用调优原则和后续步骤&#34;&gt;&lt;span&gt;通用调优原则和后续步骤&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e9%80%9a%e7%94%a8%e8%b0%83%e4%bc%98%e5%8e%9f%e5%88%99%e5%92%8c%e5%90%8e%e7%bb%ad%e6%ad%a5%e9%aa%a4&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;基准测试和迭代：&lt;/strong&gt; BIOS 调优是一个持续的迭代过程。每次更改后，都应运行特定的 AI 工作负载基准测试，衡量性能（如吞吐量、训练速度）并根据结果进行调整。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;操作系统调优：&lt;/strong&gt; 别忘了，BIOS 只是优化过程的一部分。操作系统级别的优化同样关键，例如使用 &lt;strong&gt;&lt;code&gt;numactl&lt;/code&gt;&lt;/strong&gt; 等工具进行 CPU 亲和性绑定、调整内核参数或禁用不必要的后台服务。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;软件栈优化：&lt;/strong&gt; 确保您的 AI 框架（如 TensorFlow, PyTorch）、底层库（如 cuDNN, MKL, ROCm）和驱动程序（NVIDIA, AMD）都已更新到最新版本并进行了相应的优化配置。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;通过遵循上述指南，您可以显著提升 AMD EPYC 7002 系统在 AI 工作负载下的性能和效率。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux系统分区策略</title>
      <link>https://przutto.github.io/ai-server/aef70e5/</link>
      <pubDate>Tue, 19 Aug 2025 21:38:07 +0800</pubDate><author>przutto520@gmail.com (pr_zutto)</author>
      <guid>https://przutto.github.io/ai-server/aef70e5/</guid>
      <category domain="https://przutto.github.io/categories/ai-%E5%B7%A5%E4%BD%9C%E7%AB%99-%E5%AE%8C%E5%85%A8%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/">AI-工作站 完全配置指南</category>
      <description>&lt;p&gt;本系列的AI-工作站的硬盘配置是SSD+HDD组合，合理分配和优化这些资源非常重要。&lt;/p&gt;&#xA;&lt;p&gt;系统：Ubuntu-24.04&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/aef70e5/images/linux-partition-policy.png&#34; title=&#34;Linux System Partition Policy&#34; data-thumbnail=&#34;/ai-server/aef70e5/images/linux-partition-policy.png&#34; data-sub-html=&#34;&lt;h2&gt;Linux System Partition Policy&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/aef70e5/images/linux-partition-policy.png&#39; alt=&#34;Linux System Partition Policy&#34; height=&#34;1152&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;Linux System Partition Policy&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;资源分配思路&#34;&gt;&lt;span&gt;资源分配思路&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e8%b5%84%e6%ba%90%e5%88%86%e9%85%8d%e6%80%9d%e8%b7%af&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;核心思想是：速度最快的 SSD 用于系统和常用应用，次快的 SSD 用于高性能数据或备份，HDD 用于大容量冷存储。&lt;/p&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;ssd-1-已安装-ubuntu-系统1tb&#34;&gt;&lt;span&gt;SSD 1 (已安装 Ubuntu 系统，1TB)&lt;/span&gt;&#xA;  &lt;a href=&#34;#ssd-1-%e5%b7%b2%e5%ae%89%e8%a3%85-ubuntu-%e7%b3%bb%e7%bb%9f1tb&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;p&gt;用途： 操作系统、应用程序、少量常用个人文件。&lt;/p&gt;&#xA;&lt;p&gt;分配方案：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;/ (根目录): 分配 100GB - 200GB。这将包含 Ubuntu 系统本身、所有安装的软件、以及一些系统缓存。这个大小足以应对大多数用户的需求，甚至安装大量软件也绰绰有余。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;/home (用户主目录): 将 SSD 1 的剩余空间都分配给 /home。如果你想将一部分 /home 分区放在 HDD 上（比如仅将大媒体文件放在 HDD），则这里可以根据需求分配，但为了最大化个人文件访问速度，推荐将大部分个人常用文件放在这里。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;SWAP (交换空间): 不推荐使用。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;ssd-2-空闲1tb&#34;&gt;&lt;span&gt;SSD 2 (空闲，1TB)&lt;/span&gt;&#xA;  &lt;a href=&#34;#ssd-2-%e7%a9%ba%e9%97%b21tb&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;p&gt;用途： 高性能工作负载、重要项目、虚拟机、游戏库、频繁访问的大型数据集、快速备份、或作为 SSD 1 的扩展高速存储。&lt;/p&gt;&#xA;&lt;p&gt;分配方案：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单个分区，挂载到 /mnt/ssd2 或 /data/ssd_fast 等自定义目录。 格式化为 ext4 文件系统。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;具体用途示例：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;虚拟机镜像： 如果你运行多个虚拟机，将它们放在这里能获得最佳性能。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;大型游戏库： 将 Steam 库或其他游戏安装到此驱动器。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;视频编辑/图形设计工作区： 临时存放项目文件和渲染输出。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;代码仓库/开发环境： 如果你的项目依赖大量文件I/O。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Dropbox/Nextcloud 等云同步文件夹： 如果你的云同步目录很大且需要快速访问。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;缓存或临时目录： 某些应用程序的超大缓存，例如 Docker 镜像存储目录。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 class=&#34;heading-element&#34; id=&#34;hdd-空闲4tb&#34;&gt;&lt;span&gt;HDD (空闲，4TB)&lt;/span&gt;&#xA;  &lt;a href=&#34;#hdd-%e7%a9%ba%e9%97%b24tb&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h4&gt;&lt;p&gt;用途： 大容量存储，不常用或对速度要求不高的数据，归档，媒体文件（电影、音乐）、长期备份。&lt;/p&gt;&#xA;&lt;p&gt;分配方案：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单个分区，挂载到 /mnt/hdd_storage 或 /data/archive 等自定义目录。 格式化为 ext4 文件系统。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;具体用途示例：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;电影、电视剧、音乐库。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;照片归档。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;系统备份 (Timeshift 备份目标)。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;不常用的旧项目文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;软件安装包的归档。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;安装过程指导&#34;&gt;&lt;span&gt;安装过程指导&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%ae%89%e8%a3%85%e8%bf%87%e7%a8%8b%e6%8c%87%e5%af%bc&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;从头开始规划的效果是最好的，不用担心和处理复杂的修改分区和数据迁移的操作，推荐。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;备份所有重要数据！ 两次强调！&lt;/li&gt;&#xA;&lt;li&gt;创建 Ubuntu 安装 U 盘。&lt;/li&gt;&#xA;&lt;li&gt;从 U 盘启动，选择 &amp;ldquo;Something else&amp;rdquo; (其他选项) 进行手动分区。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;分区步骤示例：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;SSD 1 (1TB)：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;EFI System Partition (ESP): 512MB，FAT32，挂载点 /boot/efi 。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;/ (根目录): 100GB - 200GB，ext4，挂载点 / 。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;/home (用户主目录): 剩余空间 (约 800GB - 900GB)，ext4，挂载点 /home 。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;SSD 2 (1TB)：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;/mnt/ssd2_data (自定义目录): 整个 1TB，ext4，挂载点 /mnt/ssd2_data (你也可以选择 /data 或其他你喜欢的名字)。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;HDD (4TB)：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;/mnt/hdd_archive (自定义目录): 整个 4TB，ext4，挂载点 /mnt/hdd_archive (你也可以选择 /data_archive 或 /media/storage 等)。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;根目录--预留空间建议&#34;&gt;&lt;span&gt;根目录 / 预留空间建议&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%a0%b9%e7%9b%ae%e5%bd%95--%e9%a2%84%e7%95%99%e7%a9%ba%e9%97%b4%e5%bb%ba%e8%ae%ae&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;在 Ubuntu 重装方案中，/ 根目录预留多少空间是一个常见的问题。这个目录包含了操作系统核心文件、大多数已安装的应用程序以及各种系统配置和临时文件。&lt;/p&gt;&#xA;&lt;p&gt;对于你拥有两个 1TB SSD 和一个 4TB HDD 的情况，/ 根目录的合理预留空间建议是：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;推荐范围： 80GB - 150GB&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;这个范围对于大多数用户来说是绰绰有余的。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;80GB: 对于安装标准 Ubuntu 系统和一些常用软件（如浏览器、办公套件、邮件客户端、一些开发工具）来说，80GB 已经非常宽裕。你会剩下大量空间来应对未来的软件安装和系统更新。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;100GB - 150GB: 如果你是一个软件爱好者，喜欢尝试各种工具、游戏，或者进行大量开发工作（例如安装Docker、多个IDE、虚拟机软件本身），那么这个范围会让你更安心，有足够的增长空间。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;为什么不建议更大？&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;浪费空间： 考虑到你的第一个 SSD 有 1TB，如果你给 / 分配 300GB 甚至 500GB，那么这部分空间很可能永远都用不完。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;管理不便： 预留过大的 / 空间，可能会导致 /home 或其他数据分区（比如你计划在第二个 SSD 上创建的数据分区）的空间被挤压，或者无法进行更精细的分配。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;为什么不建议太小？&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;未来扩展困难： 虽然 Linux 文件系统允许调整分区大小，但缩小或扩展根分区通常比较麻烦，最好在安装时就预留足够空间。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;更新问题： 系统更新，特别是内核更新，会占用一些空间。如果 / 太小，可能会导致更新失败。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;应用安装受限： 某些大型应用程序会默认安装到 /opt 或 /usr/local 下，这些都属于根目录。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;针对-workstation-的具体配置&#34;&gt;&lt;span&gt;针对 Workstation 的具体配置&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e9%92%88%e5%af%b9-workstation-%e7%9a%84%e5%85%b7%e4%bd%93%e9%85%8d%e7%bd%ae&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;实际分区如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;/ 根目录：100GB&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个大小能确保系统核心和所有可能安装的软件（CUDA系列）都有充足的空间。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;/home 用户主目录：将 SSD 1 的剩余空间全部给它&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;例如，如果 / 是 100GB，那么 /home 将有大约 800GB 左右的可用空间（考虑到文件系统开销）。这个空间对于存放常用文档、项目文件、大部分照片都是非常理想的。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这样分配的好处是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;性能最大化： 操作系统、应用程序和你的日常使用文件都在最快的 SSD 上。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;管理简洁： 无需担心哪些文件该放在哪个 SSD 的哪个分区，大部分文件都集中管理。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;利用率高： 1TB 的 SSD 得到了充分利用。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;至于第二个 1TB 的 SSD，它将专门作为高速数据盘，可以用于虚拟机、大型游戏库、视频编辑项目等，而 4TB 的 HDD 则用于海量冷存储和备份。&lt;/p&gt;&#xA;&lt;p&gt;这就是我们的系统分区推荐策略啦！&lt;/p&gt;</description>
    </item>
    <item>
      <title>AI 工作站系统选型</title>
      <link>https://przutto.github.io/ai-server/dd4a6d4/</link>
      <pubDate>Mon, 18 Aug 2025 19:54:43 +0800</pubDate><author>przutto520@gmail.com (pr_zutto)</author>
      <guid>https://przutto.github.io/ai-server/dd4a6d4/</guid>
      <category domain="https://przutto.github.io/categories/ai-%E5%B7%A5%E4%BD%9C%E7%AB%99-%E5%AE%8C%E5%85%A8%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/">AI-工作站 完全配置指南</category>
      <description>&lt;p&gt;在为 AI 工作负载选择操作系统时，Windows 和 Linux 就像硬币的两面，各自拥有独特的优势与痛点。这篇总结源自我近半年的亲身实践，记录了在两大系统间反复横跳的经历，最终得出了一个对 AI 从业者极具价值的结论。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/dd4a6d4/images/linux-vs-windows.png&#34; title=&#34;Linux-vs-Windows&#34; data-thumbnail=&#34;/ai-server/dd4a6d4/images/linux-vs-windows.png&#34; data-sub-html=&#34;&lt;h2&gt;Linux-vs-Windows&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/dd4a6d4/images/linux-vs-windows.png&#39; alt=&#34;Linux-vs-Windows&#34; height=&#34;1152&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;Linux-vs-Windows&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;序章ubuntu-2204-的初次邂逅&#34;&gt;&lt;span&gt;&lt;strong&gt;序章：Ubuntu 22.04 的初次邂逅&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%ba%8f%e7%ab%a0ubuntu-2204-%e7%9a%84%e5%88%9d%e6%ac%a1%e9%82%82%e9%80%85&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;最初，我为 AI 工作站选择了 Ubuntu 22.04 LTS，这是 AI 领域最常见的选择。安装过程顺畅，界面现代。然而，好景不长，一系列琐碎但恼人的问题接踵而至：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;远程桌面&lt;/strong&gt;：Windows RDP 虽可用，但每次都要输入随机密码，效率低下。其他远程工具也因分辨率等问题无法稳定使用。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;硬件控制&lt;/strong&gt;：NVIDIA 显卡风扇的转速控制成了大难题。默认温控策略极不合理，网上的各种“偏方”几乎全部无效，耗费了大量时间。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;开发环境&lt;/strong&gt;：Python 和 PyTorch 的版本依赖问题复杂，导致环境配置受阻。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;桌面体验&lt;/strong&gt;：中文输入法需要手动配置且稳定性欠佳，习惯了的 Windows 应用（如 Notepad++）在 Linux 上体验不佳，Snap 应用的兼容性问题频发（如 VS Code 输入框错位、PyCharm 包管理无法刷新）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;这些看似无关紧要的小问题，积少成多，极大地影响了工作效率。当 NVIDIA 显卡风扇问题在整个五一假期都无法解决时，我开始动摇了。&lt;/p&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;第一回合重返-windows-的甜蜜期&#34;&gt;&lt;span&gt;&lt;strong&gt;第一回合：重返 Windows 的“甜蜜期”&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%b8%80%e5%9b%9e%e5%90%88%e9%87%8d%e8%bf%94-windows-%e7%9a%84%e7%94%9c%e8%9c%9c%e6%9c%9f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;一次冲动之下，我决定重装 Windows 11。整个过程不过两小时，所有驱动和应用都开箱即用，显卡风扇曲线控制也只需安装官方软件即可搞定。这种丝滑的体验与 Linux 的“折磨”形成了鲜明对比。Python 多版本管理、CUDA 配置等也轻车熟路，一两天内就搭建好了整个开发环境。&lt;/p&gt;&#xA;&lt;p&gt;Windows 的优势显而易见：&lt;strong&gt;入门门槛极低，兼容性无与伦比&lt;/strong&gt;。你可以轻松使用各种商业软件，不必为硬件驱动而烦恼。&lt;/p&gt;&#xA;&lt;p&gt;然而，在使用三四个月后，Windows 的“黑屏登录”和偶发性高 CPU 占用问题再次点燃了我切换回 Linux 的决心。特别是当 CPU 长时间 100% 占用导致所有风扇全速狂转，而 Windows 平台针对 IPMI 的控制方案又极少时，我意识到，对于 AI 这种需要稳定、可控的重型工作负载，Windows 并非长久之计。&lt;/p&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;第二回合坚守-linux-的新生&#34;&gt;&lt;span&gt;&lt;strong&gt;第二回合：坚守 Linux 的“新生”&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%ac%ac%e4%ba%8c%e5%9b%9e%e5%90%88%e5%9d%9a%e5%ae%88-linux-%e7%9a%84%e6%96%b0%e7%94%9f&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;带着解决所有问题的决心，我再次回到 Linux。这次，我吸取教训，选择了更具前瞻性的 Ubuntu 24.04 LTS。安装体验出乎意料地流畅，直接联网安装 NVIDIA 驱动后，一切顺利。困扰我许久的 NVIDIA 风扇控制问题，这次只通过一个简单的 &lt;code&gt;cool-bit=4&lt;/code&gt; 参数就轻松解决。&lt;/p&gt;&#xA;&lt;p&gt;Ubuntu 24.04 的桌面体验也比 22.04 更加现代，甚至可以与 Windows 11 一较高下。那一刻，我终于明白，Linux 的前期痛苦并非无解，只是需要找到正确的路。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;windows-vs-linuxai-工作负载深度体验总结&#34;&gt;&lt;span&gt;Windows vs Linux：AI 工作负载深度体验总结&lt;/span&gt;&#xA;  &lt;a href=&#34;#windows-vs-linuxai-%e5%b7%a5%e4%bd%9c%e8%b4%9f%e8%bd%bd%e6%b7%b1%e5%ba%a6%e4%bd%93%e9%aa%8c%e6%80%bb%e7%bb%93&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;p&gt;经过这段曲折的系统选型之路，我总结了以下针对 AI 工作负载的核心对比，希望能为你的决策提供参考。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;比较维度&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;入门与易用性&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;极高&lt;/strong&gt;：安装便捷，开箱即用，应用生态丰富，硬件兼容性好。&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;极低&lt;/strong&gt;：学习曲线陡峭，基础功能需手动配置，易因误操作而崩溃。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;AI 环境配置&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;困难&lt;/strong&gt;：教程相对少，Docker 依赖 WSL，新工具适配慢。&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;便捷&lt;/strong&gt;：生态原生友好，命令几行代码即可，开源工具第一时间适配。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;开发与控制&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;一般&lt;/strong&gt;：需通过 WSL 或虚拟机模拟 Linux 环境，命令行工具整合度低。&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;极佳&lt;/strong&gt;：终端是核心，工具链深度集成，所有配置都可自定义。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;系统纯净度&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;较低&lt;/strong&gt;：冗余应用多，广告推送、强制更新频繁，后台服务繁杂。&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;极高&lt;/strong&gt;：纯净开源，无任何广告，系统资源占用极低，更专注。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;性能表现&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;标准&lt;/strong&gt;：CUDA 性能正常。&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;潜在优势&lt;/strong&gt;：部分场景下 CUDA 性能可提升 4%-10%。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;专注度&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;易分散&lt;/strong&gt;：丰富的娱乐、游戏应用容易分心。&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;易聚焦&lt;/strong&gt;：界面朴素、应用精简，天然减少干扰，利于项目开发。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;&lt;strong&gt;总结与建议：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Windows 适合你，如果&amp;hellip;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你是 AI 初学者，需要一个易于上手的环境。&lt;/li&gt;&#xA;&lt;li&gt;你依赖成熟的商业软件或需要兼顾日常办公和娱乐。&lt;/li&gt;&#xA;&lt;li&gt;你追求开箱即用的便利性，不愿意花时间折腾。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Linux 适合你，如果&amp;hellip;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;你已经跨越了初期的学习门槛。&lt;/li&gt;&#xA;&lt;li&gt;你追求极致的开发效率和对系统的完全控制权。&lt;/li&gt;&#xA;&lt;li&gt;你的工作重心是 AI 模型开发、训练和部署。&lt;/li&gt;&#xA;&lt;li&gt;你希望获得更高的性能和更纯粹的工作环境。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;结论&lt;/strong&gt;：Windows 胜在&lt;strong&gt;易用性和兼容性&lt;/strong&gt;，是 AI 入门与混合场景的优秀选择。但一旦进入 AI 开发的&lt;strong&gt;深水区&lt;/strong&gt;，&lt;strong&gt;Linux 才是真正释放生产力的理想平台&lt;/strong&gt;。虽然前期需要投入时间和精力，但其带来的开发效率、自由度和性能优势，将最终证明这笔投入是值得的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>AI 工作站硬件选型指南</title>
      <link>https://przutto.github.io/ai-server/1558209/</link>
      <pubDate>Thu, 07 Aug 2025 20:27:52 +0800</pubDate><author>przutto520@gmail.com (pr_zutto)</author>
      <guid>https://przutto.github.io/ai-server/1558209/</guid>
      <category domain="https://przutto.github.io/categories/ai-%E5%B7%A5%E4%BD%9C%E7%AB%99-%E5%AE%8C%E5%85%A8%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/">AI-工作站 完全配置指南</category>
      <description>&lt;p&gt;对于热衷于AI开发的极客们来说，拥有一台性能强劲、扩展性拉满的AI工作站是提升效率、探索前沿技术的关键。本文将分享一个经过精心规划和实践验证的硬件选型方案，旨在以极致性价比打造一台能够同时兼顾日常使用和未来AI工作负载升级的强大机器。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/1558209/images/ai-workstation-example.png&#34; title=&#34;AI工作站 整体效果&#34; data-thumbnail=&#34;/ai-server/1558209/images/ai-workstation-example.png&#34; data-sub-html=&#34;&lt;h2&gt;AI工作站 整体效果&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/1558209/images/ai-workstation-example.png&#39; alt=&#34;AI工作站 整体效果&#34; height=&#34;647&#34; width=&#34;50%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;AI工作站 整体效果&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;p&gt;这台工作站的核心定位非常明确：一台能够完全替代 Windows、以 AI 开发为主要任务的主力机。为了应对未来多变的 AI 工作负载，我们必须为硬件配置预留足够的“成长空间”。这意味着至少要能支持四张显卡，且所有 PCIe 接口的速度都不能成为瓶颈。因此，我们的核心要求是：CPU 至少提供 &lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mn&gt;16&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;64&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;4 \times 16 = 64&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7278em;vertical-align:-0.0833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mbin&#34;&gt;×&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2222em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6444em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;64&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 条 PCIe 4.0 通道，以确保多卡并行计算的效率。&lt;/p&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;核心组件性能与扩展性的完美平衡&#34;&gt;&lt;span&gt;&lt;strong&gt;核心组件：性能与扩展性的完美平衡&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%a0%b8%e5%bf%83%e7%bb%84%e4%bb%b6%e6%80%a7%e8%83%bd%e4%b8%8e%e6%89%a9%e5%b1%95%e6%80%a7%e7%9a%84%e5%ae%8c%e7%be%8e%e5%b9%b3%e8%a1%a1&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;CPU：AMD EPYC™ 7542——二手市场的“性价比之王”&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/1558209/images/amd-epyc-7000.png&#34; title=&#34;AMD-EPYC-7000系列CPU&#34; data-thumbnail=&#34;/ai-server/1558209/images/amd-epyc-7000.png&#34; data-sub-html=&#34;&lt;h2&gt;AMD-EPYC-7000系列CPU&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/1558209/images/amd-epyc-7000.png&#39; alt=&#34;AMD-EPYC-7000系列CPU&#34; height=&#34;300&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;AMD-EPYC-7000系列CPU&lt;/figcaption&gt;&#xA;      &lt;/figure&gt;&#xA;&lt;p&gt;面对上述严苛的 PCIe 通道需求，我们很快将目光锁定在了服务器级别的 AMD EPYC 系列。其超高的 Serdes 通道数与亲民的二手价格，让它在工作站领域大放异彩。综合考量日常使用的响应速度，我们选择了 AMD EPYC™ 7542 这款 32 核 64 线程的处理器。它高达 3.4GHz 的加速频率，在保证多任务并行能力的同时，也能兼顾单核性能，真正做到了“鱼与熊掌”兼得。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;主板：Supermicro H12SSL-i——为AI而生&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/1558209/images/Supermicro-H12SSL-i-pcb.png&#34; title=&#34;Supermicro-H12SSL-i PCB&#34; data-thumbnail=&#34;/ai-server/1558209/images/Supermicro-H12SSL-i-pcb.png&#34; data-sub-html=&#34;&lt;h2&gt;Supermicro-H12SSL-i PCB&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/1558209/images/Supermicro-H12SSL-i-pcb.png&#39; alt=&#34;Supermicro-H12SSL-i PCB&#34; height=&#34;498&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;Supermicro-H12SSL-i PCB&lt;/figcaption&gt;&#xA;      &lt;/figure&gt;&#xA;&lt;p&gt;选择了强大的 EPYC CPU，与之匹配的主板自然也非等闲之辈。Supermicro H12SSL-i 这款主板凭借其惊人的扩展性脱颖而出：它提供了 5 个 PCIe 4.0 x16 插槽和 2 个 PCIe 4.0 x8 插槽，完美满足了多卡部署的需求。&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/1558209/images/Supermicro-H12SSL-i-block.png&#34; title=&#34;Supermicro-H12SSL-i 功能框图&#34; data-thumbnail=&#34;/ai-server/1558209/images/Supermicro-H12SSL-i-block.png&#34; data-sub-html=&#34;&lt;h2&gt;Supermicro-H12SSL-i 功能框图&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/1558209/images/Supermicro-H12SSL-i-block.png&#39; alt=&#34;Supermicro-H12SSL-i 功能框图&#34; height=&#34;1380&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;Supermicro-H12SSL-i 功能框图&lt;/figcaption&gt;&#xA;      &lt;/figure&gt;&#xA;&lt;p&gt;同时，8 条 DIMM 内存插槽最高支持 2TB ECC 内存，这为未来加载大型语言模型（如使用 &lt;code&gt;llama.cpp&lt;/code&gt;）提供了坚实的内存保障，彻底告别“内存焦虑”。不过，服务器主板带来的 IPMI 等高级功能也需要一定的学习成本，但这无疑是值得的。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;内存：从够用，到“喂饱”LLM&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/1558209/images/ddr4-ram.png&#34; title=&#34;DDR4 ECC RDIMM 内存条&#34; data-thumbnail=&#34;/ai-server/1558209/images/ddr4-ram.png&#34; data-sub-html=&#34;&lt;h2&gt;DDR4 ECC RDIMM 内存条&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/1558209/images/ddr4-ram.png&#39; alt=&#34;DDR4 ECC RDIMM 内存条&#34; height=&#34;232&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;DDR4 ECC RDIMM 内存条&lt;/figcaption&gt;&#xA;      &lt;/figure&gt;&#xA;&lt;p&gt;最初的配置是 4 条 32GB DDR4 3200MHz ECC 内存，总计 128GB。虽然在当时看来相当充裕，但在今天的 LLM 时代，这已经显得捉襟见肘。因此，我们强烈建议将内存容量升级至 512GB 甚至 1TB，这将极大地提升处理大型模型时的效率。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;显卡rtx-4060-16gai工作负载的甜品卡&#34;&gt;&lt;span&gt;&lt;strong&gt;显卡：RTX-4060-16G——AI工作负载的甜品卡&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%98%be%e5%8d%a1rtx-4060-16gai%e5%b7%a5%e4%bd%9c%e8%b4%9f%e8%bd%bd%e7%9a%84%e7%94%9c%e5%93%81%e5%8d%a1&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/1558209/images/NVIDIA-RTX-4060-Ti-16G.png&#34; title=&#34;NVIDIA RTX-4060-Ti-16G&#34; data-thumbnail=&#34;/ai-server/1558209/images/NVIDIA-RTX-4060-Ti-16G.png&#34; data-sub-html=&#34;&lt;h2&gt;NVIDIA RTX-4060-Ti-16G&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/1558209/images/NVIDIA-RTX-4060-Ti-16G.png&#39; alt=&#34;NVIDIA RTX-4060-Ti-16G&#34; height=&#34;627&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;NVIDIA RTX-4060-Ti-16G&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;p&gt;对于AI工作负载，显存容量往往比绝对性能更重要。NVIDIA RTX-4060-Ti-16G 凭借其 16GB 的大显存和相对较低的功耗，成为了初期投入的最佳选择。它在 AI 负载上的性价比无人能敌。初期可以先配置一张，后续根据训练需求，逐步增加至四张，或更换为更高阶的显卡。&lt;/p&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;电源机箱与散热为稳定运行保驾护航&#34;&gt;&lt;span&gt;&lt;strong&gt;电源、机箱与散热：为稳定运行保驾护航&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e7%94%b5%e6%ba%90%e6%9c%ba%e7%ae%b1%e4%b8%8e%e6%95%a3%e7%83%ad%e4%b8%ba%e7%a8%b3%e5%ae%9a%e8%bf%90%e8%a1%8c%e4%bf%9d%e9%a9%be%e6%8a%a4%e8%88%aa&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;电源&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;p&gt;考虑到未来四卡满载的功率需求，我们果断选择了长城（Great Wall）额定2000W 巨龙GW-EPS2000BL 消费级电源。作为核心耗损件，电源的稳定至关重要，因此这部分必须选择全新的。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;机箱&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;p&gt;为了容纳巨大的服务器主板、多张显卡和强大的散热系统，我们选择了尺寸最大的追风者 PK620 XL 全塔式工作站机箱，它为未来的所有升级都预留了充足的空间。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;散热&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;p&gt;稳定是长期工作的基石。我们选择了全风冷方案，并配置了多达 7 个追风者机箱风扇（6个14cm，1个16cm），以及专用的 EPYC 散热器，确保这台“AI猛兽”在长时间高负载运行下，依然能保持冷静。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;存储速度与备份两手抓&#34;&gt;&lt;span&gt;&lt;strong&gt;存储：速度与备份两手抓&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%ad%98%e5%82%a8%e9%80%9f%e5%ba%a6%e4%b8%8e%e5%a4%87%e4%bb%bd%e4%b8%a4%e6%89%8b%e6%8a%93&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;figure&gt;&lt;a class=&#34;lightgallery&#34; href=&#34;https://przutto.github.io/ai-server/1558209/images/ZHITAI-SSD.png&#34; title=&#34;ZHITAI-SSD&#34; data-thumbnail=&#34;/ai-server/1558209/images/ZHITAI-SSD.png&#34; data-sub-html=&#34;&lt;h2&gt;ZHITAI-SSD&lt;/h2&gt;&#34;&gt;&lt;img loading=&#34;lazy&#34; src=&#39;https://przutto.github.io/ai-server/1558209/images/ZHITAI-SSD.png&#39; alt=&#34;ZHITAI-SSD&#34; height=&#34;459&#34; width=&#34;60%&#34;&gt;&lt;/a&gt;&lt;figcaption class=&#34;image-caption&#34;&gt;ZHITAI-SSD&lt;/figcaption&gt;&#xA;  &lt;/figure&gt;&#xA;&lt;p&gt;存储方案采用了“SSD+HDD”的组合：长江存储的 NVMe SSD 作为系统盘和常用应用盘，提供极致的读写速度；而西部数据的紫盘 HDD，则作为数据备份盘，其为监控优化的 7x24 小时高可靠性，为你的珍贵数据保驾护航。&lt;/p&gt;&#xA;&lt;h3 class=&#34;heading-element&#34; id=&#34;最终配置清单&#34;&gt;&lt;span&gt;&lt;strong&gt;最终配置清单&lt;/strong&gt;&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e6%9c%80%e7%bb%88%e9%85%8d%e7%bd%ae%e6%b8%85%e5%8d%95&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h3&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;组件&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;型号/规格&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;关键参数&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;数量&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;&lt;strong&gt;备注&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;CPU&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;AMD EPYC 7542&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;32 核 64 线程，最高 3.4GHz&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;二手优先，128 条 PCIe 4.0 通道&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;主板&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;Supermicro H12SSL-i&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;5× PCIe 4.0 x16，8× DDR4 DIMM&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;二手优先，支持 2TB ECC 内存&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;内存&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DDR4 ECC RDIMM&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4x 32GB，总计 128GB&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;二手优先，建议升级至 512GB+&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;显卡&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;RTX 4060 16GB&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;16GB GDDR6 显存&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1~4&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;二手优先，高显存性价比之选&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;电源&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;长城 2000W ATX&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;80 PLUS 白金认证&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;必须全新&lt;/strong&gt;，为未来多卡留足余量&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;机箱&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;追风者 PK620 XL&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;全塔式，支持 E-ATX 主板&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;全新，为散热和扩展性设计&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;散热&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;专用 EPYC 散热器 + 追风者风扇&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;全风冷方案&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;1 + 7&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;全新，确保长期稳定运行&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;strong&gt;存储&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;长江存储 SSD + WD HDD&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;NVMe SSD + SATA HDD&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;3&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;全新，兼顾速度与数据安全&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
  </channel>
</rss>
